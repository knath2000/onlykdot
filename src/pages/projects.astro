import BaseLayout from '../layouts/BaseLayout.astro';
import { getCollection, type CollectionEntry } from 'astro:content';
// import { getImage, type ImageMetadata } from 'astro:assets'; // Comment out image optimization imports
import ProjectFilters from '../components/ProjectFilters.jsx';

// Re-add simplified interfaces
interface SimplifiedProjectData {
  title: string;
  thumbnail: string | null; // Keep as string path for now, allow null
  shortDesc: string;
  techStack: string[];
  links: { live?: string; repo?: string };
  isFeatured: boolean;
}

interface SimplifiedProjectEntry {
  slug: string;
  data: SimplifiedProjectData;
}

---
// src/pages/projects.astro - Page to display all projects
// Interfaces moved above the frontmatter block

// Fetch project data from the content collection
// const allProjects: CollectionEntry<'projects'>[] = await getCollection('projects'); // Comment out data fetching

const pageTitle = "My Projects";
const pageDescription = "A collection of my software development projects.";

// Simplify the project data to pass only serializable fields
// const simplifiedProjects: SimplifiedProjectEntry[] = allProjects.map(project => ({
//   slug: project.slug,
//   data: {
//     title: project.data.title,
//     thumbnail: project.data.thumbnail || null, // Pass path string or null
//     shortDesc: project.data.shortDesc,
//     techStack: project.data.techStack || [],
//     links: project.data.links || {},
//     isFeatured: project.data.isFeatured || false,
//   }
// }));

// Define simple hardcoded data for testing
const testProjects: SimplifiedProjectEntry[] = [
  {
    slug: 'test-project-1',
    data: {
      title: 'Test Project 1',
      thumbnail: null, // No image processing for now
      shortDesc: 'A test description.',
      techStack: ['Test', 'Astro'],
      links: {},
      isFeatured: false,
    }
  },
   {
    slug: 'test-project-2',
    data: {
      title: 'Test Project 2',
      thumbnail: null,
      shortDesc: 'Another test description.',
      techStack: ['React', 'Test'],
      links: {},
      isFeatured: true,
    }
  }
];
---
<BaseLayout title={pageTitle} description={pageDescription}>
	<div class="container mx-auto px-4 py-8">
		<h1 class="text-4xl font-heading font-bold text-center mb-12">{pageTitle}</h1>
		<ProjectFilters client:visible projects={testProjects} /> {/* Pass hardcoded data */}
		{/* The grid container is now managed within ProjectFilters.jsx */}
	</div>
</BaseLayout>