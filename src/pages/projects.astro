---
import BaseLayout from '../layouts/BaseLayout.astro';
import ProjectFilters from '../components/ProjectFilters.jsx';
import { getCollection } from 'astro:content';

const pageTitle = "Projects â€“ Gameboard";
const pageDescription = "Explore my software projects in a playful, interactive game-inspired interface.";

// Load all projects from the content collection
const projects = await getCollection('projects');
---

<BaseLayout title={pageTitle} description={pageDescription}>
  <section class="relative min-h-screen flex flex-col items-center justify-center bg-gradient-to-br from-base to-accent-blue/10 px-4 py-16">
    <h1 class="text-5xl md:text-6xl font-heading font-bold text-center mb-6 text-accent-blue drop-shadow-glow">
      <span class="inline-block animate-bounce">ðŸŽ®</span> Projects Gameboard
    </h1>
    <p class="text-lg md:text-xl text-center text-primary/80 mb-10 max-w-2xl">
      Select, filter, and explore projects as if youâ€™re choosing your next quest. Each project card is a playable tile with interactive effects and game-like visuals.
    </p>
    <div class="w-full max-w-5xl">
      <ProjectFilters client:visible projects={projects} />
    </div>
    <div class="absolute top-0 left-0 w-full h-full pointer-events-none z-[-1]">
      <!-- Game-like background: animated grid, particles, or subtle SVGs -->
      <svg class="w-full h-full opacity-10" viewBox="0 0 100 100" preserveAspectRatio="none">
        <defs>
          <pattern id="grid" width="10" height="10" patternUnits="userSpaceOnUse">
            <path d="M 10 0 L 0 0 0 10" fill="none" stroke="#4f46e5" stroke-width="0.5"/>
          </pattern>
        </defs>
        <rect width="100" height="100" fill="url(#grid)" />
      </svg>
      <!-- Optionally, add animated particles or floating icons here -->
    </div>
  </section>
</BaseLayout>