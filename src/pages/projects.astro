---
// src/pages/projects.astro - Page to display all projects
import BaseLayout from '../layouts/BaseLayout.astro';
// import ProjectCard from '../components/ProjectCard.astro'; // No longer needed here
// Placeholder for the interactive filtering component
import { getCollection } from 'astro:content';
import ProjectFilters from '../components/ProjectFilters.jsx'; // Import the React component

// Define an interface for better type safety
interface ProjectData {
  title: string;
  thumbnail: string;
  shortDesc: string;
  techTags?: string[];
  links?: { live?: string; repo?: string };
}
interface ProjectEntry {
  slug: string;
  data: ProjectData;
}

// Fetch project data from the content collection
const allProjects = await getCollection('projects');

// Type assertion for safety (optional but good practice)
// const allProjects: CollectionEntry<'projects'>[] = await getCollection('projects');

const pageTitle = "My Projects";
const pageDescription = "A collection of my software development projects.";

// Preprocess projects to pass only necessary, serializable data to the client island
// This helps prevent hydration errors, e.g., by excluding Date objects.
const simplifiedProjects = allProjects.map(project => ({
  slug: project.slug,
  data: {
    title: project.data.title,
    thumbnail: project.data.thumbnail,
    shortDesc: project.data.shortDesc,
    techStack: project.data.techStack || [], // Ensure array exists
    links: project.data.links || {},       // Ensure object exists
    isFeatured: project.data.isFeatured || false, // Ensure boolean exists
    // Exclude: publishDate, problemStatement (if not needed by card/filter)
  }
}));
---
<BaseLayout title={pageTitle} description={pageDescription}>
	<div class="container mx-auto px-4 py-8">
		<h1 class="text-4xl font-heading font-bold text-center mb-12">{pageTitle}</h1>

		{/* --- Project Filters and Display --- */}
		{/*
		  The ProjectFilters component is a React island (`client:load`).
		  It receives the full list of projects fetched server-side.
		  It handles the filtering logic and renders the filtered list client-side.
		*/}
		<ProjectFilters client:visible projects={simplifiedProjects} />

		{/* The grid container is now managed within ProjectFilters.jsx */}
		{/* <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8"> */}
			{/* Server-side rendering loop removed */}
			{/* No projects message is now handled client-side */}
		{/* </div> */}
		</div>
	</div>
</BaseLayout>